#BlueJ class context
comment0.target=Location
comment0.text=\r\n\ Stanley's\ stores\ location\ class\ that\ manages\ the\ list\ of\ customers\ and\ units\r\n\r\n\ @author\ Oyunomin\ Munkhkhurel\r\n\ @version\ 1/9/2018\r\n
comment1.params=code\ basePrice
comment1.target=Location(java.lang.String,\ double)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Location\r\n\ \r\n\ @throws\ \ IllegalArgumentException\ if\ it\ gets\ null\ location\ code\r\n\ @throws\ \ IllegalArgumentException\ if\ it\ gets\ wrong\ pattern\ of\ string\r\n\ @throws\ \ IllegalArgumentException\ if\ it\ gets\ negative\ base\ price\r\n\ \r\n\ @param\ \ \ String\ \ location\ code\ \r\n\ @param\ \ \ Double\ \ base\ price\ for\ each\ location\r\n
comment10.params=unitName
comment10.target=Unit[]\ getEmptyUnitType(java.lang.String)
comment10.text=\r\n\ Creates\ another\ array\ that\ has\ empty\ units\ by\ specified\ type\r\n\ \r\n\ @return\ \ \ \ \ \ array\ of\ empty\ units\ by\ specified\ type\r\n
comment11.params=
comment11.target=void\ chargeRent()
comment11.text=\r\n\ Charges\ monthly\ rent\ from\ all\ of\ the\ customers\r\n\ \r\n\ return\ \r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Prints\ every\ information\ of\ the\ location\ when\ requested\r\n\ \r\n\ @return\ \ \ \ \ \ information\ of\ location\r\n
comment2.params=
comment2.target=java.lang.String\ getLocationCode()
comment2.text=\r\n\ Retrieves\ the\ code\ for\ the\ location\r\n\r\n\ @return\ \ \ \ the\ code\ for\ location\r\n
comment3.params=
comment3.target=double\ getBasePrice()
comment3.text=\r\n\ Retrieves\ the\ base\ price\r\n\r\n\ @return\ \ \ \ \ base\ price\r\n
comment4.params=row\ unit
comment4.target=Unit\ getUnit(int,\ int)
comment4.text=\r\n\ Retrieves\ the\ unit\ from\ the\ 2\ dimensional\ array\ of\ Units\r\n\r\n\ @return\ \ \ \ the\ unit\r\n
comment5.params=index
comment5.target=Customer\ getCustomer(int)
comment5.text=\r\n\ Retrieves\ the\ customer\ from\ the\ customer\ array\r\n\r\n\ @return\ \ \ \ the\ customer\r\n
comment6.params=
comment6.target=int\ getCustomerCount()
comment6.text=\ \r\n\ Retrieves\ number\ of\ customers\ we\ are\ currently\ having\r\n\ \r\n\ @return\ \ \ \ count\ of\ current\ customer\r\n
comment7.params=customer
comment7.target=void\ addCustomer(Customer)
comment7.text=\r\n\ Adds\ the\ customer\ to\ the\ customer\ array\r\n\r\n\ @param\ \ \ \ Customer\ \ \ customer\ \r\n
comment8.params=customer
comment8.target=Unit[]\ getUnitCustomer(Customer)
comment8.text=\r\n\ Retrieves\ unit\ in\ array\ rented\ by\ specific\ customer\r\n\ \r\n\ @return\ \ \ \ \ \ array\ of\ Units\ rented\ by\ specific\ customer\r\n
comment9.params=
comment9.target=Unit[]\ getEmptyUnit()
comment9.text=\r\n\ Creates\ another\ array\ that\ has\ empty\ units\ on\ it\r\n\ \r\n\ @return\ \ \ \ \ \ array\ of\ empty\ units\r\n
numComments=13
